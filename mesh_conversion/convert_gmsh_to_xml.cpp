// compiles with "g++ -o convert_gmsh_to_xml convert_gmsh_to_xml.cpp"// not meant to be particularly general, just 2d triangular meshes#include <cstdlib>#include <iostream>#include <fstream>#include <string>int main(int argc, char **argv) {    if (argc<3) {        std::cerr << "Usage: convert_gmsh_to_xml  gmsh_file_name  xml_file_name" << std::endl;        exit(EXIT_FAILURE);        return -1;    }    const char *gmsh_fname = argv[1];    const char *xml_fname = argv[2];    // write header    std::ofstream xml_file(xml_fname);    xml_file << "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n"             << "<dolfin xmlns:dolfin=\"http://www.fenics.org/dolfin/\">\n"             << "  <mesh celltype=\"triangle\" dim=\"2\">\n";    // get and write number of vertices    std::ifstream gmsh_file(gmsh_fname);    std::string line;    for (unsigned i=0; i<4; ++i) // throw away first four lines        std::getline(gmsh_file, line);    std::size_t n_vert;    gmsh_file >> n_vert;    xml_file << "    <vertices size=\"" << n_vert << "\">\n";    // get and write vertex list    unsigned v_id;    double x, y, z;    for (unsigned i=0; i<n_vert; ++i) {        gmsh_file >> v_id >> x >> y >> z;        xml_file << "      <vertex index=\"" << v_id-1 << "\" "                 << "x=\"" << x << "\" y=\"" << y << "\"/>\n";    }    xml_file << "    </vertices>\n";    // number of triangles and triangle list    std::size_t n_tri;    gmsh_file >> line >> line >> n_tri; // throw away first two    xml_file << "    <cells size=\"" << n_tri << "\">\n";    unsigned t_id, v0, v1, v2, dummy;    for (unsigned i=0; i<n_tri; ++i) {        gmsh_file >> t_id >> dummy >> dummy >> dummy >> dummy >> v0 >> v1 >> v2;        xml_file << "      <triangle index=\"" << t_id-1 << "\" "            << "v0=\"" << v0-1 << "\" v1=\"" << v1-1 << "\" v2=\"" << v2-1 << "\"/>\n";    }    xml_file << "    </cells>\n  </mesh>\n</dolfin>";    gmsh_file.close();    xml_file.close();}